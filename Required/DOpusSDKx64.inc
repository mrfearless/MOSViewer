; Directory Opus 9 Viewer Plugins
;
; Source file: 'viewer plugins.h' converted to asm style format by fearless 2019
;

VIEWERPLUGINVERSION EQU 4


DVPFIF_CanHandleStreams             EQU ( 1 shl 0 ) ; Plugin can handle IStreams to identify and read files
DVPFIF_CanHandleBytes               EQU ( 1 shl 1 ) ; Plugin can identify files based on file header
DVPFIF_CatchAll                     EQU ( 1 shl 2 ) ; 'Catch All' plugin wants to be called last
DVPFIF_DefaultCatchAll              EQU ( 1 shl 3 ) ; 'Default Catch All' plugin is last unless there's another 'catch all'
DVPFIF_ExtensionsOnly               EQU ( 1 shl 4 ) ; Plugin only wants to identify files based on file extension
DVPFIF_ExtensionsOnlyIfSlow         EQU ( 1 shl 5 ) ; Plugin looks only at file extensions IF file is 'slow'
DVPFIF_ExtensionsOnlyIfNoRndSeek    EQU ( 1 shl 6 ) ; Plugin looks only at file extensions IF file doesn't support random seeking
DVPFIF_ExtensionsOnlyForThumbnails  EQU ( 1 shl 7 ) ; Plugin looks only at file extensions IF generating thumbnails
DVPFIF_NoSlowFiles                  EQU ( 1 shl 8 ) ; Plugin doesn't handle 'slow' files
DVPFIF_NeedRandomSeek               EQU ( 1 shl 9 ) ; Plugin needs random seek capability
DVPFIF_CanConfigure                 EQU ( 1 shl 10 ) ; Plugin has a configuration interface
DVPFIF_CanShowAbout                 EQU ( 1 shl 11 ) ; Plugin has an About function
DVPFIF_NoThumbnails                 EQU ( 1 shl 12 ) ; Plugin doesn't want to be called to generate thumbnails
DVPFIF_NoProperties                 EQU ( 1 shl 13 ) ; Don't show 'Properties' item on default context menu
DVPFIF_ZeroBytesOk                  EQU ( 1 shl 14 ) ; Zero byte files are ok (eg text files)
DVPFIF_OverrideInternal             EQU ( 1 shl 15 ) ; Plugin can override internal Opus image routines
IF (VIEWERPLUGINVERSION ge 3)
DVPFIF_InitialDisable               EQU ( 1 shl 16 ) ; Plugin is disabled by default
DVPFIF_NoFileInformation            EQU ( 1 shl 17 ) ; Is not to be called for file information (eg Description field)
DVPFIF_ProvideFileInfo              EQU ( 1 shl 18 ) ; Provides information without viewing
DVPFIF_NoMultithreadThumbnails      EQU ( 1 shl 19 ) ; Don't call simultaneously on multiple threads for thumbnails
DVPFIF_FolderThumbnails             EQU ( 1 shl 20 ) ; Can provide folder thumbnails
DVPFIF_TrueThumbnailSize            EQU ( 1 shl 21 ) ; Always provide true thumbnail size
ENDIF
IF (VIEWERPLUGINVERSION ge 4)
DVPFIF_UseVersionResource           EQU ( 1 shl 22 ) ; Use the plugin's version resource for version information
DVPFIF_CanShowHex                   EQU ( 1 shl 23 ) ; The plugin can be used as a hex viewer for any type of file
DVPFIF_OnlyThumbnails               EQU ( 1 shl 24 ) ; Plugin is only to be called for thumbnails
ENDIF
  
; Plugin major types enum:
DOpusViewerPluginFileType typedef SDWORD
DVPMajorType_Image      = 0
DVPMajorType_Sound      = 1
DVPMajorType_Text       = 2
DVPMajorType_Other      = 3
DVPMajorType_Movie      = 4

;DOpusViewerPluginInfoW
VIEWERPLUGININFOW           STRUCT 8
    cbSize                  DWORD ?
    dwFlags                 DWORD ?
    dwVersionHigh           DWORD ?
    dwVersionLow            DWORD ?
    lpszHandleExts          LPWSTR ?
    lpszName                LPWSTR ?
    lpszDescription         LPWSTR ?
    lpszCopyright           LPWSTR ?
    lpszURL                 LPWSTR ?
    cchHandleExtsMax        DWORD ?
    cchNameMax              DWORD ?
    cchDescriptionMax       DWORD ?
    cchCopyrightMax         DWORD ?
    cchURLMax               DWORD ?
    dwlMinFileSize          QWORD ?
    dwlMaxFileSize          QWORD ?
    dwlMinPreviewFileSize   QWORD ?
    dwlMaxPreviewFileSize   QWORD ?
    uiMajorFileType         DWORD ?
    idPlugin                GUID <>
IF (VIEWERPLUGINVERSION ge 4)
    dwOpusVerMajor          DWORD ?
    dwOpusVerMinor          DWORD ?
    dwInitFlags             DWORD ?
    hIconSmall              HICON ?
    hIconLarge              HICON ?
ENDIF
VIEWERPLUGININFOW           ENDS
LPVIEWERPLUGININFOW         TYPEDEF PTR VIEWERPLUGININFOW

; DOpusViewerPluginInfoA
VIEWERPLUGININFOA           STRUCT 8
    cbSize                  DWORD ?
    dwFlags                 DWORD ?
    dwVersionHigh           DWORD ?
    dwVersionLow            DWORD ?
    lpszHandleExts          LPSTR ?
    lpszName                LPSTR ?
    lpszDescription         LPSTR ?
    lpszCopyright           LPSTR ?
    lpszURL                 LPSTR ?
    cchHandleExtsMax        DWORD ?
    cchNameMax              DWORD ?
    cchDescriptionMax       DWORD ?
    cchCopyrightMax         DWORD ?
    cchURLMax               DWORD ?
    dwlMinFileSize          QWORD ?
    dwlMaxFileSize          QWORD ?
    dwlMinPreviewFileSize   QWORD ?
    dwlMaxPreviewFileSize   QWORD ?
    uiMajorFileType         DWORD ?
    idPlugin                GUID <>
IF (VIEWERPLUGINVERSION ge 4)
    dwOpusVerMajor          DWORD ?
    dwOpusVerMinor          DWORD ?
    dwInitFlags             DWORD ?
    hIconSmall              HICON ?
    hIconLarge              HICON ?
ENDIF
VIEWERPLUGININFOA           ENDS
LPVIEWERPLUGININFOA         TYPEDEF PTR VIEWERPLUGININFOA


VIEWERPLUGININFOW_V1_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGININFOW , idPlugin )>
VIEWERPLUGININFOW_V4_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGININFOW , dwInitFlags )>

VIEWERPLUGININFOA_V1_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGININFOA , idPlugin )>
VIEWERPLUGININFOA_V4_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGININFOA , dwInitFlags )>
IFDEF __UNICODE__
VIEWERPLUGININFO EQU <VIEWERPLUGININFOW>
LPVIEWERPLUGININFO EQU <LPVIEWERPLUGININFOW>
VIEWERPLUGININFO_V1_SIZE EQU <VIEWERPLUGININFOW_V1_SIZE>
VIEWERPLUGININFO_V4_SIZE EQU <VIEWERPLUGININFOW_V4_SIZE>
ELSE
VIEWERPLUGININFO EQU <VIEWERPLUGININFOA>
LPVIEWERPLUGININFO EQU <LPVIEWERPLUGININFOA>
VIEWERPLUGININFO_V1_SIZE EQU <VIEWERPLUGININFOA_V1_SIZE>
VIEWERPLUGININFO_V4_SIZE EQU <VIEWERPLUGININFOA_V4_SIZE>
ENDIF
  
  
; VIEWERPLUGININFO initialisation flags  
IF (VIEWERPLUGINVERSION ge 4)
VPINITF_FIRSTTIME           EQU ( 1 shl 0 )
VPINITF_USB                 EQU ( 1 shl 1 )
ENDIF
  
; VIEWERPLUGINFILEINFO flags
DVPFIF_CanReturnBitmap      EQU ( 1 shl 0 )
DVPFIF_CanReturnViewer      EQU ( 1 shl 1 )
DVPFIF_CanReturnThumbnail   EQU ( 1 shl 2 )
DVPFIF_CanShowProperties    EQU ( 1 shl 3 )
IF (VIEWERPLUGINVERSION ge 3)
DVPFIF_ResolutionInch       EQU ( 1 shl 4 )
DVPFIF_ResolutionCM         EQU ( 1 shl 5 )
DVPFIF_WantFileInfo         EQU ( 1 shl 6 )
DVPFIF_ReturnsText          EQU ( 1 shl 7 )
DVPFIF_HasAlphaChannel      EQU ( 1 shl 8 )
DVPFIF_HasTransparentColor  EQU ( 1 shl 9 )
DVPFIF_HasTransparentPen    EQU ( 1 shl 10 )
DVPFIF_CanReturnFileInfo    EQU ( 1 shl 11 )
DVPFIF_NoThumbnailBorder    EQU ( 1 shl 12 )
DVPFIF_NoShowThumbnailIcon  EQU ( 1 shl 13 )
DVPFIF_ShowThumbnailIcon    EQU ( 1 shl 14 )
DVPFIF_FolderThumbnail      EQU ( 1 shl 15 )
DVPFIF_RegenerateOnResize   EQU ( 1 shl 16 )
ENDIF
IF (VIEWERPLUGINVERSION ge 4)
DVPFIF_JPEGStream           EQU ( 1 shl 17 )
DVPFIF_PNGStream            EQU ( 1 shl 18 )
DVPFIF_InFolderThumbnail    EQU ( 1 shl 19 )
ENDIF
  
  
DVPFITypeHint_None      = 0
DVPFITypeHint_PlainText = 1
DVPFITypeHint_RichText  = 2
DVPFITypeHint_HTML      = 3
  
IF (VIEWERPLUGINVERSION ge 4)
DVPColorSpace_Unknown   = 0
DVPColorSpace_Grayscale = 1
DVPColorSpace_RGB       = 2
DVPColorSpace_YCBCR     = 3
DVPColorSpace_CMYK      = 4
DVPColorSpace_YCCK      = 5
ENDIF

; DOpusViewerPluginFileInfoW
VIEWERPLUGINFILEINFOW   STRUCT 8
    cbSize              DWORD ?
    dwFlags             DWORD ?
    wMajorType          WORD ?
    wMinorType          WORD ?
    szImageSize         SIZE_ <>
    iNumBits            DWORD ?
    lpszInfo            LPWSTR ?
    cchInfoMax          DWORD ?
    dwPrivateData       DWORD 8 dup (?)
IF (VIEWERPLUGINVERSION ge 2)
    szResolution        SIZE_ <>
    iTypeHint           DWORD ?
ENDIF
IF (VIEWERPLUGINVERSION ge 3)
    crTransparentColor  COLORREF ?
    wThumbnailQuality   WORD ?
    dwlFileSize         QWORD ?
ENDIF
IF (VIEWERPLUGINVERSION ge 4)
    iColorSpace         DWORD ?
ENDIF
VIEWERPLUGINFILEINFOW   ENDS

LPVIEWERPLUGINFILEINFOW TYPEDEF PTR VIEWERPLUGINFILEINFOW
  
VIEWERPLUGINFILEINFOW_V1_SIZE EQU RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGINFILEINFOW , dwPrivateData [ 8 ] )
VIEWERPLUGINFILEINFOW_V2_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGINFILEINFOW , iTypeHint )>
VIEWERPLUGINFILEINFOW_V3_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGINFILEINFOW , dwlFileSize )>
VIEWERPLUGINFILEINFOW_V4_SIZE EQU <sizeof ( VIEWERPLUGINFILEINFOW )>
  
; DOpusViewerPluginFileInfoA
VIEWERPLUGINFILEINFOA   STRUCT 8
    cbSize              DWORD ?
    dwFlags             DWORD ?
    wMajorType          WORD ?
    wMinorType          WORD ?
    szImageSize         SIZE_ <>
    iNumBits            DWORD ?
    lpszInfo            LPSTR ?
    cchInfoMax          DWORD ?
    dwPrivateData       DWORD 8 dup (?)
IF (VIEWERPLUGINVERSION ge 2)
    szResolution        SIZE_ <>
    iTypeHint           DWORD ?
ENDIF
IF (VIEWERPLUGINVERSION ge 3)
    crTransparentColor  COLORREF ?
    wThumbnailQuality   WORD ?
    dwlFileSize         QWORD ?
ENDIF
IF (VIEWERPLUGINVERSION ge 4)
    iColorSpace         DWORD ?
ENDIF
VIEWERPLUGINFILEINFOA   ENDS

LPVIEWERPLUGINFILEINFOA TYPEDEF PTR VIEWERPLUGINFILEINFOA



VIEWERPLUGINFILEINFOA_V1_SIZE EQU RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGINFILEINFOA , dwPrivateData [ 8 ] )
VIEWERPLUGINFILEINFOA_V2_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGINFILEINFOA , iTypeHint )>
VIEWERPLUGINFILEINFOA_V3_SIZE EQU <RTL_SIZEOF_THROUGH_FIELD ( VIEWERPLUGINFILEINFOA , dwlFileSize )>
VIEWERPLUGINFILEINFOA_V4_SIZE EQU <sizeof ( VIEWERPLUGINFILEINFOA )>
IFDEF __UNICODE__
VIEWERPLUGINFILEINFO EQU <VIEWERPLUGINFILEINFOW>
LPVIEWERPLUGINFILEINFO EQU <LPVIEWERPLUGINFILEINFOW>
VIEWERPLUGINFILEINFO_V1_SIZE EQU <VIEWERPLUGINFILEINFOW_V1_SIZE>
VIEWERPLUGINFILEINFO_V2_SIZE EQU <VIEWERPLUGINFILEINFOW_V2_SIZE>
VIEWERPLUGINFILEINFO_V3_SIZE EQU <VIEWERPLUGINFILEINFOW_V3_SIZE>
VIEWERPLUGINFILEINFO_V4_SIZE EQU <VIEWERPLUGINFILEINFOW_V4_SIZE>
ELSE
VIEWERPLUGINFILEINFO EQU <VIEWERPLUGINFILEINFOA>
LPVIEWERPLUGINFILEINFO EQU <LPVIEWERPLUGINFILEINFOA>
VIEWERPLUGINFILEINFO_V1_SIZE EQU <VIEWERPLUGINFILEINFOA_V1_SIZE>
VIEWERPLUGINFILEINFO_V2_SIZE EQU <VIEWERPLUGINFILEINFOA_V2_SIZE>
VIEWERPLUGINFILEINFO_V3_SIZE EQU <VIEWERPLUGINFILEINFOA_V3_SIZE>
VIEWERPLUGINFILEINFO_V4_SIZE EQU <VIEWERPLUGINFILEINFOA_V4_SIZE>
ENDIF
  
; Messages sent to a plugin viewer window
DOpusViewerPluginMsg typedef SDWORD
DVPLUGINMSG_BASE = ( WM_APP + 0f00h ) 
DVPLUGINMSG_LOADA = 1
DVPLUGINMSG_LOADW = 2
DVPLUGINMSG_LOADSTREAMA = 3
DVPLUGINMSG_LOADSTREAMW = 4
DVPLUGINMSG_GETIMAGEINFOA = 5
DVPLUGINMSG_GETIMAGEINFOW = 6
DVPLUGINMSG_GETCAPABILITIES = 7
DVPLUGINMSG_RESIZE = 8
DVPLUGINMSG_SETROTATION = 9
DVPLUGINMSG_ROTATE = 10
DVPLUGINMSG_SETZOOM = 11
DVPLUGINMSG_ZOOM = 12
DVPLUGINMSG_GETZOOMFACTOR = 13
DVPLUGINMSG_SELECTALL = 14
DVPLUGINMSG_TESTSELECTION = 15
DVPLUGINMSG_COPYSELECTION = 16
DVPLUGINMSG_PRINT = 17
DVPLUGINMSG_PROPERTIES = 18
DVPLUGINMSG_REDRAW = 19
DVPLUGINMSG_GETPICSIZE = 20
DVPLUGINMSG_GETAUTOBGCOL = 21
DVPLUGINMSG_MOUSEWHEEL = 22
DVPLUGINMSG_ADDCONTEXTMENUA = 23
DVPLUGINMSG_ADDCONTEXTMENUW = 24
DVPLUGINMSG_SETABORTEVENT = 25
DVPLUGINMSG_GETORIGINALPICSIZE = 26
DVPLUGINMSG_CLEAR = 27
DVPLUGINMSG_NOTIFY_LOADPROGRESS = 28
DVPLUGINMSG_ISDLGMESSAGE = 29
DVPLUGINMSG_TRANSLATEACCEL = 30
DVPLUGINMSG_REINITIALIZE = 31
DVPLUGINMSG_SHOWHIDESCROLLBARS = 32
IF (VIEWERPLUGINVERSION ge 3)
DVPLUGINMSG_INLOADLOOP = 33
DVPLUGINMSG_SETIMAGEFRAME = 34
DVPLUGINMSG_SETDESKWALLPAPERA = 35
DVPLUGINMSG_GETZOOMLIMITS = 36
DVPLUGINMSG_THUMBSCHANGED = 37
DVPLUGINMSG_GETBITMAP = 38
DVPLUGINMSG_GAMMACHANGE = 39
DVPLUGINMSG_APPCOMMAND = 40
DVPLUGINMSG_PREVENTFRAME = 41
DVPLUGINMSG_FULLSCREEN = 42
DVPLUGINMSG_SHOWFILEINFO = 43
DVPLUGINMSG_ISFILEINFOSHOWN = 44
DVPLUGINMSG_SETDESKWALLPAPERW = 45
ENDIF
IF (VIEWERPLUGINVERSION ge 4)
DVPLUGINMSG_PREVENTAUTOSIZE = 46
DVPLUGINMSG_SHOWHEX = 47
DVPLUGINMSG_ISALPHAHIDDEN = 48
DVPLUGINMSG_HIDEALPHA = 49
ENDIF

IFDEF __UNICODE__
DVPLUGINMSG_LOAD                EQU <DVPLUGINMSG_LOADW>
DVPLUGINMSG_LOADSTREAM          EQU <DVPLUGINMSG_LOADSTREAMW>
DVPLUGINMSG_GETIMAGEINFO        EQU <DVPLUGINMSG_GETIMAGEINFOW>
DVPLUGINMSG_ADDCONTEXTMENU      EQU <DVPLUGINMSG_ADDCONTEXTMENUW>
DVPLUGINMSG_SETDESKWALLPAPER    EQU <DVPLUGINMSG_SETDESKWALLPAPERW>
ELSE
DVPLUGINMSG_LOAD                EQU <DVPLUGINMSG_LOADA>
DVPLUGINMSG_LOADSTREAM          EQU <DVPLUGINMSG_LOADSTREAMA>
DVPLUGINMSG_GETIMAGEINFO        EQU <DVPLUGINMSG_GETIMAGEINFOA>
DVPLUGINMSG_ADDCONTEXTMENU      EQU <DVPLUGINMSG_ADDCONTEXTMENUA>
DVPLUGINMSG_SETDESKWALLPAPER    EQU <DVPLUGINMSG_SETDESKWALLPAPERA>
ENDIF

; Notification messages sent from a plugin to its parent window
DVPN_FIRST          EQU ( 0 - 2000 )
DVPN_LAST           EQU ( 0 - 2020 )
DVPN_GETBGCOL       EQU ( DVPN_FIRST - 0 )
DVPN_SIZECHANGE     EQU ( DVPN_FIRST - 1 )
DVPN_CLICK          EQU ( DVPN_FIRST - 2 )
DVPN_RESETZOOM      EQU ( DVPN_FIRST - 3 )
DVPN_LBUTTONSCROLL  EQU ( DVPN_FIRST - 4 )
DVPN_CLEARED        EQU ( DVPN_FIRST - 5 )
DVPN_FOCUSCHANGE    EQU ( DVPN_FIRST - 6 )
DVPN_CAPABILITIES   EQU ( DVPN_FIRST - 7 )
DVPN_STATUSTEXT     EQU ( DVPN_FIRST - 8 )
IF (VIEWERPLUGINVERSION ge 3)
DVPN_LOADNEWFILE    EQU ( DVPN_FIRST - 9 )
DVPN_SETCURSOR      EQU ( DVPN_FIRST - 10 )
DVPN_MCLICK         EQU ( DVPN_FIRST - 11 )
DVPN_GETGAMMA       EQU ( DVPN_FIRST - 12 )
DVPN_BUTTONOPTS     EQU ( DVPN_FIRST - 13 )
DVPN_GETCURSORS     EQU ( DVPN_FIRST - 14 )
DVPN_MOUSEWHEEL     EQU ( DVPN_FIRST - 15 )
ENDIF
IF (VIEWERPLUGINVERSION ge 4)
DVPN_HEXSTATE       EQU ( DVPN_FIRST - 16 )
ENDIF

; Notification structure for DVPN_SIZECHANGE
DVPNMSIZECHANGE     STRUCT 8
    hdr             NMHDR <>
    szSize          SIZE_ <>
DVPNMSIZECHANGE     ENDS
LPDVPNMSIZECHANGE   TYPEDEF PTR DVPNMSIZECHANGE

; Notification structure for DVPN_CLICK
DVPNMCLICK          STRUCT 8
    hdr             NMHDR <>
    pt              POINT <>
    fMenu           BOOL ?
DVPNMCLICK          ENDS
LPDVPNMCLICK        TYPEDEF PTR DVPNMCLICK

; Notification structure for DVPN_RESETZOOM
DVPNMRESETZOOM      STRUCT 8
    hdr             NMHDR <>
    iZoom           DWORD ?
DVPNMRESETZOOM      ENDS
LPDVPNMRESETZOOM    TYPEDEF PTR DVPNMRESETZOOM
  
; Notification structure for DVPN_FOCUSCHANGE
DVPNMFOCUSCHANGE    STRUCT 8
    hdr             NMHDR <>
    fGotFocus       BOOL ?
DVPNMFOCUSCHANGE    ENDS
LPDVPNMFOCUSCHANGE  TYPEDEF PTR DVPNMFOCUSCHANGE

; Notification structure for DVPN_CAPABILITIES
DVPNMCAPABILITIES   STRUCT 8
    hdr             NMHDR <>
    dwCapabilities  DWORD ?
DVPNMCAPABILITIES   ENDS
LPDVPNMCAPABILITIES TYPEDEF PTR DVPNMCAPABILITIES

; Notification structure for DVPN_STATUSTEXT
DVPNMSTATUSTEXT     STRUCT
    hdr             NMHDR <>
    lpszStatusText  LPTSTR ?
    fUnicode        BOOL ?
DVPNMSTATUSTEXT     ENDS
LPDVPNMSTATUSTEXT   TYPEDEF PTR DVPNMSTATUSTEXT

; Notification structure for DVPN_LOADNEWFILE
DVPNMLOADNEWFILE    STRUCT 8
    hdr             NMHDR <>
    lpszFilename    LPTSTR ?
    fUnicode        BOOL ?
    lpStream        LPSTREAM ?
DVPNMLOADNEWFILE    ENDS
LPDVPNMLOADNEWFILE  TYPEDEF PTR DVPNMLOADNEWFILE

; Notification structure for DVPN_SETCURSOR  
DVPNMSETCURSOR      STRUCT 8
    hdr             NMHDR <>
    pt              POINT <>
    fMenu           BOOL ?
    fCanScroll      BOOL ?
    iCursor         DWORD ?
DVPNMSETCURSOR      ENDS
LPDVPNMSETCURSOR    TYPEDEF PTR DVPNMSETCURSOR

; Notification structure for DVPN_GETGAMMA
DVPNMGAMMA          STRUCT
    hdr             NMHDR <>
    fEnable         BOOL ?
    dbGamma         REAL8 ?
DVPNMGAMMA          ENDS
LPDVPNMGAMMA        TYPEDEF PTR DVPNMGAMMA
  
; Notification structure for DVPN_BUTTONOPTS
DVPNMBUTTONOPTS     STRUCT 8
    hdr             NMHDR <>
    iLeft           DWORD ?
    iRight          DWORD ?
    iMiddle         DWORD ?
DVPNMBUTTONOPTS     ENDS
LPDVPNMBUTTONOPTS   TYPEDEF PTR DVPNMBUTTONOPTS

; Button options enum:
BUTTONOPT_NONE      = 0
BUTTONOPT_SELECT    = 1
BUTTONOPT_ADVANCE   = 2
BUTTONOPT_SCROLL    = 3
BUTTONOPT_FULLSCREEN = 4
BUTTONOPT_CLOSE     = 5

; Notification structure for DVPN_GETCURSORS
DVPNMGETCURSORS     STRUCT 8
    hdr             NMHDR <>
    hCurHandOpen    HCURSOR ?
    hCurHandClosed  HCURSOR ?
    hCurCrosshair   HCURSOR ?
DVPNMGETCURSORS     ENDS
LPDVPNMGETCURSORS   TYPEDEF PTR DVPNMGETCURSORS
  
; Zoom constants for DVPLUGINMSG_ZOOM
ZOOM_ORIGINAL       EQU 0
ZOOM_FITPAGE        EQU - 1
ZOOM_TILED          EQU - 2

; Cursor constants for DVPN_SETCURSOR
VPCURSOR_NONE       EQU 0
VPCURSOR_DRAG       EQU 1
VPCURSOR_SELECT     EQU 2

; Notification structure for DVPN_MOUSEWHEEL
DVPNMMOUSEWHEEL     STRUCT 8
    hdr             NMHDR <>
    wParam          WPARAM ?
    lParam          LPARAM ?
DVPNMMOUSEWHEEL     ENDS
LPDVPNMMOUSEWHEEL   TYPEDEF PTR DVPNMMOUSEWHEEL
  
; Notification structure for DVPN_HEXSTATE
IF (VIEWERPLUGINVERSION ge 4)
DVNMHEXSTATE        STRUCT 8
      hdr           NMHDR <>
      fState        BOOL ?
DVNMHEXSTATE        ENDS
LPDVPNMHEXSTATE     TYPEDEF PTR DVNMHEXSTATE
ENDIF

; Viewer capability flags returned by DVPLUGINMSG_GETCAPABILITIES
VPCAPABILITY_RESIZE_FIT         EQU ( 1 shl 0 )
VPCAPABILITY_RESIZE_ANY         EQU ( 1 shl 1 )
VPCAPABILITY_ROTATE_RIGHTANGLE  EQU ( 1 shl 2 )
VPCAPABILITY_ROTATE_ANY         EQU ( 1 shl 3 )
VPCAPABILITY_SELECTALL          EQU ( 1 shl 4 )
VPCAPABILITY_COPYALL            EQU ( 1 shl 5 )
VPCAPABILITY_COPYSELECTION      EQU ( 1 shl 6 )
VPCAPABILITY_PRINT              EQU ( 1 shl 7 )
VPCAPABILITY_WANTFOCUS          EQU ( 1 shl 8 )
VPCAPABILITY_SHOWPROPERTIES     EQU ( 1 shl 9 )
VPCAPABILITY_WANTMOUSEWHEEL     EQU ( 1 shl 10 )
VPCAPABILITY_ADDCONTEXTMENU     EQU ( 1 shl 11 )
VPCAPABILITY_HASDIALOGS         EQU ( 1 shl 12 )
VPCAPABILITY_HASACCELERATORS    EQU ( 1 shl 13 )
IF (VIEWERPLUGINVERSION ge 3)
VPCAPABILITY_CANSETWALLPAPER    EQU ( 1 shl 14 )
VPCAPABILITY_CANTRACKFOCUS      EQU ( 1 shl 15 )
VPCAPABILITY_SUPPLYBITMAP       EQU ( 1 shl 16 )
VPCAPABILITY_GAMMA              EQU ( 1 shl 17 )
VPCAPABILITY_FILEINFO           EQU ( 1 shl 18 )
ENDIF
IF (VIEWERPLUGINVERSION ge 4)
VPCAPABILITY_RESIZE_TILE        EQU ( 1 shl 19 )
VPCAPABILITY_HIDEALPHA          EQU ( 1 shl 20 )
VPCAPABILITY_NOFULLSCREEN       EQU ( 1 shl 21 )
ENDIF
  
; Flags for DVPLUGINMSG_THUMBSCHANGED
DVPTCF_REDRAW EQU ( 1 shl 0 )
DVPTCF_FLUSHCACHE EQU ( 1 shl 1 )
  
; Structure used to add items to the context menu
DVPCONTEXTMENUITEMA STRUCT 8
    lpszLabel       LPSTR ?
    dwFlags         DWORD ?
    uID             DWORD ?
DVPCONTEXTMENUITEMA ENDS

LPDVPCONTEXTMENUITEMA TYPEDEF PTR DVPCONTEXTMENUITEMA
  
DVPCONTEXTMENUITEMW STRUCT 8
    lpszLabel       LPWSTR ?
    dwFlags         DWORD ?
    uID             DWORD ?
DVPCONTEXTMENUITEMW ENDS

LPDVPCONTEXTMENUITEMW TYPEDEF PTR DVPCONTEXTMENUITEMW
  
IFDEF __UNICODE__
DVPCONTEXTMENUITEM EQU <DVPCONTEXTMENUITEMW>
LPDVPCONTEXTMENUITEM EQU <LPDVPCONTEXTMENUITEMW>
ELSE
DVPCONTEXTMENUITEM EQU <DVPCONTEXTMENUITEMA>
LPDVPCONTEXTMENUITEM EQU <LPDVPCONTEXTMENUITEMA>
ENDIF
  
; DVPCONTEXTMENUITEM flags
DVPCMF_CHECKED          EQU ( 1 shl 0 )
DVPCMF_RADIOCHECK       EQU ( 1 shl 1 )
DVPCMF_DISABLED         EQU ( 1 shl 2 )
DVPCMF_SEPARATOR        EQU ( 1 shl 3 )
DVPCMF_BEGINSUBMENU     EQU ( 1 shl 4 )
DVPCMF_ENDSUBMENU       EQU ( 1 shl 5 )

; Structure passed to DVP_USBSafe function

IFNDEF DEF_OPUSUSBSAFEDATA
    DEF_OPUSUSBSAFEDATA EQU <>
    
    OPUSUSBSAFEDATA     STRUCT 8
      cbSize            DWORD ?
      pszOtherExports   LPWSTR ?
      cchOtherExports   DWORD ?
    OPUSUSBSAFEDATA     ENDS

    LPOPUSUSBSAFEDATA   TYPEDEF PTR OPUSUSBSAFEDATA
ENDIF
  
; Exported plugin DLL functions
DVPFUNCNAME_INIT EQU <"DVP_Init",0>
IF (VIEWERPLUGINVERSION ge 4)
DVPFUNCNAME_INITEX EQU <"DVP_InitEx",0>
DVPFUNCNAME_USBSAFE EQU <"DVP_USBSafe",0>
ENDIF
DVPFUNCNAME_UNINIT EQU <"DVP_Uninit",0>
DVPFUNCNAME_IDENTIFYA EQU <"DVP_IdentifyA",0>
DVPFUNCNAME_IDENTIFYW EQU <"DVP_IdentifyW",0>
DVPFUNCNAME_IDENTIFYFILEA EQU <"DVP_IdentifyFileA",0>
DVPFUNCNAME_IDENTIFYFILEW EQU <"DVP_IdentifyFileW",0>
DVPFUNCNAME_IDENTIFYFILESTREAMA EQU <"DVP_IdentifyFileStreamA",0>
DVPFUNCNAME_IDENTIFYFILESTREAMW EQU <"DVP_IdentifyFileStreamW",0>
DVPFUNCNAME_IDENTIFYFILEBYTESA EQU <"DVP_IdentifyFileBytesA",0>
DVPFUNCNAME_IDENTIFYFILEBYTESW EQU <"DVP_IdentifyFileBytesW",0>
DVPFUNCNAME_LOADBITMAPA EQU <"DVP_LoadBitmapA",0>
DVPFUNCNAME_LOADBITMAPW EQU <"DVP_LoadBitmapW",0>
DVPFUNCNAME_LOADBITMAPSTREAMA EQU <"DVP_LoadBitmapStreamA",0>
DVPFUNCNAME_LOADBITMAPSTREAMW EQU <"DVP_LoadBitmapStreamW",0>
DVPFUNCNAME_LOADTEXTA EQU <"DVP_LoadTextA",0>
DVPFUNCNAME_LOADTEXTW EQU <"DVP_LoadTextW",0>
DVPFUNCNAME_SHOWPROPERTIESA EQU <"DVP_ShowPropertiesA",0>
DVPFUNCNAME_SHOWPROPERTIESW EQU <"DVP_ShowPropertiesW",0>
DVPFUNCNAME_SHOWPROPERTIESSTREAMA EQU <"DVP_ShowPropertiesStreamA",0>
DVPFUNCNAME_SHOWPROPERTIESSTREAMW EQU <"DVP_ShowPropertiesStreamW",0>
DVPFUNCNAME_CREATEVIEWER EQU <"DVP_CreateViewer",0>
DVPFUNCNAME_CONFIGURE EQU <"DVP_Configure",0>
DVPFUNCNAME_ABOUT EQU <"DVP_About",0>
DVPFUNCNAME_GETFILEINFOFILEA EQU <"DVP_GetFileInfoFileA",0>
DVPFUNCNAME_GETFILEINFOFILEW EQU <"DVP_GetFileInfoFileW",0>
DVPFUNCNAME_GETFILEINFOFILESTREAMA EQU <"DVP_GetFileInfoFileStreamA",0>
DVPFUNCNAME_GETFILEINFOFILESTREAMW EQU <"DVP_GetFileInfoFileStreamW",0>

IFDEF __UNICODE__
DVPFUNCNAME_IDENTIFY EQU <DVPFUNCNAME_IDENTIFYW>
DVPFUNCNAME_IDENTIFYFILE EQU <DVPFUNCNAME_IDENTIFYFILEW>
DVPFUNCNAME_IDENTIFYFILESTREAM EQU <DVPFUNCNAME_IDENTIFYFILESTREAMW>
DVPFUNCNAME_IDENTIFYFILEBYTES EQU <DVPFUNCNAME_IDENTIFYFILEBYTESW>
DVPFUNCNAME_LOADBITMAP EQU <DVPFUNCNAME_LOADBITMAPW>
DVPFUNCNAME_LOADBITMAPSTREAM EQU <DVPFUNCNAME_LOADBITMAPSTREAMW>
DVPFUNCNAME_LOADTEXT EQU <DVPFUNCNAME_LOADTEXTW>
DVPFUNCNAME_SHOWPROPERTIES EQU <DVPFUNCNAME_SHOWPROPERTIESW>
DVPFUNCNAME_SHOWPROPERTIESSTREAM EQU <DVPFUNCNAME_SHOWPROPERTIESSTREAMW>
DVPFUNCNAME_GETFILEINFOFILE EQU <DVPFUNCNAME_GETFILEINFOFILEW>
DVPFUNCNAME_GETFILEINFOFILESTREAM EQU <DVPFUNCNAME_GETFILEINFOFILESTREAMW>
ELSE
DVPFUNCNAME_IDENTIFY EQU <DVPFUNCNAME_IDENTIFYA>
DVPFUNCNAME_IDENTIFYFILE EQU <DVPFUNCNAME_IDENTIFYFILEA>
DVPFUNCNAME_IDENTIFYFILESTREAM EQU <DVPFUNCNAME_IDENTIFYFILESTREAMA>
DVPFUNCNAME_IDENTIFYFILEBYTES EQU <DVPFUNCNAME_IDENTIFYFILEBYTESA>
DVPFUNCNAME_LOADBITMAP EQU <DVPFUNCNAME_LOADBITMAPA>
DVPFUNCNAME_LOADBITMAPSTREAM EQU <DVPFUNCNAME_LOADBITMAPSTREAMA>
DVPFUNCNAME_LOADTEXT EQU <DVPFUNCNAME_LOADTEXTA>
DVPFUNCNAME_SHOWPROPERTIES EQU <DVPFUNCNAME_SHOWPROPERTIESA>
DVPFUNCNAME_SHOWPROPERTIESSTREAM EQU <DVPFUNCNAME_SHOWPROPERTIESSTREAMA>
DVPFUNCNAME_GETFILEINFOFILE EQU <DVPFUNCNAME_GETFILEINFOFILEA>
DVPFUNCNAME_GETFILEINFOFILESTREAM EQU <DVPFUNCNAME_GETFILEINFOFILESTREAMA>
ENDIF
  
; dwStreamFlags for the Stream functions
DVPSF_Slow EQU ( 1 shl 0 )
DVPSF_NoRandomSeek EQU ( 1 shl 1 )
  
; dwFlags for the CreateViewer function
DVPCVF_Border EQU ( 1 shl 1 )
DVPCVF_Preview EQU ( 1 shl 2 )
DVPCVF_ReturnTabs EQU ( 1 shl 3 )

; Data structure for the DVP_LoadText function
DVPCVF_FromStream EQU ( 1 shl 0 )

; enum
DVPText_Plain   = 0
DVPText_Rich    = 1
DVPText_HTML    = 2

; DVPLoadTextDataA
DVPLOADTEXTDATAA        STRUCT 8
    cbSize              DWORD ?
    dwFlags             DWORD ?
    hWndParent          HWND ?
    lpszFile            LPSTR ?
    lpInStream          LPSTREAM ?
    dwStreamFlags       DWORD ?
    lpOutStream         LPSTREAM ?
    iOutTextType        DWORD ?
    tchPreferredViewer  CHAR 40 dup (?)
    hAbortEvent         HANDLE ?
DVPLOADTEXTDATAA        ENDS
LPDVPLOADTEXTDATAA      TYPEDEF PTR DVPLOADTEXTDATAA

; DVPLoadTextDataW
DVPLOADTEXTDATAW        STRUCT 8
    cbSize              DWORD ?
    dwFlags             DWORD ?
    hWndParent          HWND ?
    lpszFile            LPWSTR ?
    lpInStream          LPSTREAM ?
    dwStreamFlags       DWORD ?
    lpOutStream         LPSTREAM ?
    iOutTextType        DWORD ?
    tchPreferredViewer  WCHAR 40 dup (?)
    hAbortEvent         HANDLE ?
DVPLOADTEXTDATAW        ENDS
LPDVPLOADTEXTDATAW      TYPEDEF PTR DVPLOADTEXTDATAW
  
IFDEF __UNICODE__
DVPLOADTEXTDATA EQU <DVPLOADTEXTDATAW>
LPDVPLOADTEXTDATA EQU <LPDVPLOADTEXTDATAW>
ELSE
DVPLOADTEXTDATA EQU <DVPLOADTEXTDATAA>
LPDVPLOADTEXTDATA EQU <LPDVPLOADTEXTDATAA>
ENDIF
  
; File Info stuff 
; DVPFileInfoHeader
DVPFILEINFOHEADER       STRUCT 8
    cbSize              DWORD ?
    uiMajorType         DWORD ?
    dwFlags             DWORD ?
DVPFILEINFOHEADER       ENDS
LPDVPFILEINFOHEADER     TYPEDEF PTR DVPFILEINFOHEADER

; DVPFileInfoMusicA
DVPFILEINFOMUSICA       STRUCT 8
    hdr                 DVPFILEINFOHEADER <>
    lpszAlbum           LPSTR ?
    cchAlbumMax         DWORD ?
    lpszArtist          LPSTR ?
    cchArtistMax        DWORD ?
    lpszTitle           LPSTR ?
    cchTitleMax         DWORD ?
    lpszGenre           LPSTR ?
    cchGenreMax         DWORD ?
    lpszComment         LPSTR ?
    cchCommentMax       DWORD ?
    lpszFormat          LPSTR ?
    cchFormatMax        DWORD ?
    lpszEncoder         LPSTR ?
    cchEncoderMax       DWORD ?
    dwBitRate           DWORD ?
    dwSampleRate        DWORD ?
    dwDuration          DWORD ?
    iTrackNum           DWORD ?
    iYear               DWORD ?
    iNumChannels        DWORD ?
    dwMusicFlags        DWORD ?
    lpszCodec           LPSTR ?
    cchCodecMax         DWORD ?
DVPFILEINFOMUSICA       ENDS
LPDVPFILEINFOMUSICA     TYPEDEF PTR DVPFILEINFOMUSICA

; DVPFileInfoMusicW  
DVPFILEINFOMUSICW       STRUCT 8
    hdr                 DVPFILEINFOHEADER <>
    lpszAlbum           LPWSTR ?
    cchAlbumMax         DWORD ?
    lpszArtist          LPWSTR ?
    cchArtistMax        DWORD ?
    lpszTitle           LPWSTR ?
    cchTitleMax         DWORD ?
    lpszGenre           LPWSTR ?
    cchGenreMax         DWORD ?
    lpszComment         LPWSTR ?
    cchCommentMax       DWORD ?
    lpszFormat          LPWSTR ?
    cchFormatMax        DWORD ?
    lpszEncoder         LPWSTR ?
    cchEncoderMax       DWORD ?
    dwBitRate           DWORD ?
    dwSampleRate        DWORD ?
    dwDuration          DWORD ?
    iTrackNum           DWORD ?
    iYear               DWORD ?
    iNumChannels        DWORD ?
    dwMusicFlags        DWORD ?
    lpszCodec           LPWSTR ?
    cchCodecMax         DWORD ?
DVPFILEINFOMUSICW       ENDS
LPDVPFILEINFOMUSICW     TYPEDEF PTR DVPFILEINFOMUSICW

IFDEF __UNICODE__
DVPFILEINFOMUSIC EQU <DVPFILEINFOMUSICW>
LPDVPFILEINFOMUSIC EQU <LPDVPFILEINFOMUSICW>
ELSE
DVPFILEINFOMUSIC EQU <DVPFILEINFOMUSICA>
LPDVPFILEINFOMUSIC EQU <LPDVPFILEINFOMUSICA>
ENDIF
  
DVPMusicFlag_VBR EQU ( 1 shl 0 )
DVPMusicFlag_VBRAccurate EQU ( 1 shl 1 )
DVPMusicFlag_JointStereo EQU ( 1 shl 2 )

; DVPFileInfoMovieA
DVPFILEINFOMOVIEA STRUCT 8
    hdr DVPFILEINFOHEADER <>
    szVideoSize SIZE_ <>
    iNumBits DWORD ?
    dwDuration DWORD ?
    dwFrames DWORD ?
    flFrameRate REAL8 ?
    dwDataRate DWORD ?
    ptAspectRatio POINT <>
    dwAudioBitRate DWORD ?
    dwAudioSampleRate DWORD ?
    iNumChannels DWORD ?
    lpszVideoCodec LPSTR ?
    cchVideoCodecMax DWORD ?
    lpszAudioCodec LPSTR ?
    cchAudioCodecMax DWORD ?
DVPFILEINFOMOVIEA ENDS

LPDVPFILEINFOMOVIEA TYPEDEF PTR DVPFILEINFOMOVIEA

; DVPFileInfoMovieW
DVPFILEINFOMOVIEW STRUCT 8
    hdr DVPFILEINFOHEADER <>
    szVideoSize SIZE_ <>
    iNumBits DWORD ?
    dwDuration DWORD ?
    dwFrames DWORD ?
    flFrameRate REAL8 ?
    dwDataRate DWORD ?
    ptAspectRatio POINT <>
    dwAudioBitRate DWORD ?
    dwAudioSampleRate DWORD ?
    iNumChannels DWORD ?
    lpszVideoCodec LPWSTR ?
    cchVideoCodecMax DWORD ?
    lpszAudioCodec LPWSTR ?
    cchAudioCodecMax DWORD ?
DVPFILEINFOMOVIEW ENDS

LPDVPFILEINFOMOVIEW TYPEDEF PTR DVPFILEINFOMOVIEW
  
IFDEF __UNICODE__
DVPFILEINFOMOVIE EQU <DVPFILEINFOMOVIEW>
LPDVPFILEINFOMOVIE EQU <LPDVPFILEINFOMOVIEW>
ELSE
DVPFILEINFOMOVIE EQU <DVPFILEINFOMOVIEA>
LPDVPFILEINFOMOVIE EQU <LPDVPFILEINFOMOVIEA>
ENDIF
  
; Data structure passed to DVP_InitEx
IF (VIEWERPLUGINVERSION ge 4)
DVPINITEXDATA STRUCT 8
      cbSize DWORD ?
      hwndDOpusMsgWindow HWND ?
      dwOpusVerMajor DWORD ?
      dwOpusVerMinor DWORD ?
      pszLanguageName LPWSTR ?
DVPINITEXDATA ENDS
LPDVPINITEXDATA TYPEDEF PTR DVPINITEXDATA
ENDIF

LPSIZE TYPEDEF PTR SIZE_
LPRECT TYPEDEF PTR RECT

; Function prototypes

DVP_Init                    PROTO 
DVP_InitEx                  PROTO pInitExData:LPDVPINITEXDATA
DVP_USBSafe                 PROTO pUSBSafeData:LPOPUSUSBSAFEDATA
DVP_Uninit                  PROTO 
DVP_IdentifyA               PROTO lpVPInfo:LPVIEWERPLUGININFOA
DVP_IdentifyW               PROTO lpVPInfo:LPVIEWERPLUGININFOW
DVP_IdentifyFileA           PROTO hWnd:HWND, lpszName:LPSTR, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, hAbortEvent:HANDLE
DVP_IdentifyFileW           PROTO hWnd:HWND, lpszName:LPWSTR, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, hAbortEvent:HANDLE
DVP_IdentifyFileStreamA     PROTO hWnd:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, dwStreamFlags:DWORD
DVP_IdentifyFileStreamW     PROTO hWnd:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, dwStreamFlags:DWORD
DVP_IdentifyFileBytesA      PROTO hWnd:HWND, lpszName:QWORD, lpData:LPBYTE, uiDataSize:UINT, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, dwStreamFlags:DWORD
DVP_IdentifyFileBytesW      PROTO hWnd:HWND, lpszName:QWORD, lpData:LPBYTE, uiDataSize:UINT, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, dwStreamFlags:DWORD
DVP_LoadBitmapA             PROTO hWnd:HWND, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, lpszDesiredSize:LPSIZE, hAbortEvent:HANDLE
DVP_LoadBitmapW             PROTO hWnd:HWND, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, lpszDesiredSize:LPSIZE, hAbortEvent:HANDLE
DVP_LoadBitmapStreamA       PROTO hWnd:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, lpszDesiredSize:LPSIZE, dwStreamFlags:DWORD
DVP_LoadBitmapStreamW       PROTO hWnd:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, lpszDesiredSize:LPSIZE, dwStreamFlags:DWORD
DVP_LoadTextA               PROTO lpLoadTextData:LPDVPLOADTEXTDATAA
DVP_LoadTextW               PROTO lpLoadTextData:LPDVPLOADTEXTDATAW
DVP_ShowPropertiesA         PROTO hWndParent:HWND, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA
DVP_ShowPropertiesW         PROTO hWndParent:HWND, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW
DVP_ShowPropertiesStreamA   PROTO hWndParent:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, dwStreamFlags:DWORD
DVP_ShowPropertiesStreamW   PROTO hWndParent:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, dwStreamFlags:DWORD
DVP_CreateViewer            PROTO hWndParent:HWND, lpRc:LPRECT, dwFlags:DWORD
DVP_Configure               PROTO hWndParent:HWND, hWndNotify:HWND, dwNotifyData:DWORD
DVP_About                   PROTO hWndParent:HWND
DVP_GetFileInfoFileA        PROTO hWnd:HWND, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, lpFIH:LPDVPFILEINFOHEADER, hAbortEvent:HANDLE
DVP_GetFileInfoFileW        PROTO hWnd:HWND, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, lpFIH:LPDVPFILEINFOHEADER, hAbortEvent:HANDLE
DVP_GetFileInfoFileStreamA  PROTO hWnd:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOA, lpFIH:LPDVPFILEINFOHEADER, dwStreamFlags:DWORD
DVP_GetFileInfoFileStreamW  PROTO hWnd:HWND, lpStream:LPSTREAM, lpszName:QWORD, lpVPFileInfo:LPVIEWERPLUGINFILEINFOW, lpFIH:LPDVPFILEINFOHEADER, dwStreamFlags:DWORD


  ; proto_PFNDVPINIT typedef proto fastcall 
  ; PFNDVPINIT TYPEDEF PTR proto_PFNDVPINIT
  ; IF (VIEWERPLUGINVERSION ge 4)
    ; proto_PFNDVPINITEX typedef proto fastcall :LPDVPINITEXDATA
    ; PFNDVPINITEX TYPEDEF PTR proto_PFNDVPINITEX
    ; proto_PFNDVPUSBSAFE typedef proto fastcall :LPOPUSUSBSAFEDATA
    ; PFNDVPUSBSAFE TYPEDEF PTR proto_PFNDVPUSBSAFE
  ; ENDIF
  ; proto_PFNDVPUNINIT typedef proto fastcall 
  ; PFNDVPUNINIT TYPEDEF PTR proto_PFNDVPUNINIT
  ; proto_PFNDVPIDENTIFYA typedef proto fastcall :LPVIEWERPLUGININFOA
  ; PFNDVPIDENTIFYA TYPEDEF PTR proto_PFNDVPIDENTIFYA
  ; proto_PFNDVPIDENTIFYW typedef proto fastcall :LPVIEWERPLUGININFOW
  ; PFNDVPIDENTIFYW TYPEDEF PTR proto_PFNDVPIDENTIFYW
  ; proto_PFNDVPIDENTIFYFILEA typedef proto fastcall :HWND, :LPSTR, :LPVIEWERPLUGINFILEINFOA, :HANDLE
  ; PFNDVPIDENTIFYFILEA TYPEDEF PTR proto_PFNDVPIDENTIFYFILEA
  ; proto_PFNDVPIDENTIFYFILEW typedef proto fastcall :HWND, :LPWSTR, :LPVIEWERPLUGINFILEINFOW, :HANDLE
  ; PFNDVPIDENTIFYFILEW TYPEDEF PTR proto_PFNDVPIDENTIFYFILEW
  ; proto_PFNDVPIDENTIFYFILESTREAMA typedef proto fastcall :HWND, :LPSTREAM, :LPSTR, :LPVIEWERPLUGINFILEINFOA, :DWORD
  ; PFNDVPIDENTIFYFILESTREAMA TYPEDEF PTR proto_PFNDVPIDENTIFYFILESTREAMA
  ; proto_PFNDVPIDENTIFYFILESTREAMW typedef proto fastcall :HWND, :LPSTREAM, :LPWSTR, :LPVIEWERPLUGINFILEINFOW, :DWORD
  ; PFNDVPIDENTIFYFILESTREAMW TYPEDEF PTR proto_PFNDVPIDENTIFYFILESTREAMW
  ; proto_PFNDVPIDENTIFYFILEBYTESA typedef proto fastcall :HWND, :LPSTR, :LPBYTE, :DWORD, :LPVIEWERPLUGINFILEINFOA, :DWORD
  ; PFNDVPIDENTIFYFILEBYTESA TYPEDEF PTR proto_PFNDVPIDENTIFYFILEBYTESA
  ; proto_PFNDVPIDENTIFYFILEBYTESW typedef proto fastcall :HWND, :LPWSTR, :LPBYTE, :DWORD, :LPVIEWERPLUGINFILEINFOW, :DWORD
  ; PFNDVPIDENTIFYFILEBYTESW TYPEDEF PTR proto_PFNDVPIDENTIFYFILEBYTESW
  ; proto_PFNDVPLOADBITMAPA typedef proto fastcall :HWND, :LPSTR, :LPVIEWERPLUGINFILEINFOA, :LPSIZE, :HANDLE
  ; PFNDVPLOADBITMAPA TYPEDEF PTR proto_PFNDVPLOADBITMAPA
  ; proto_PFNDVPLOADBITMAPW typedef proto fastcall :HWND, :LPWSTR, :LPVIEWERPLUGINFILEINFOW, :LPSIZE, :HANDLE
  ; PFNDVPLOADBITMAPW TYPEDEF PTR proto_PFNDVPLOADBITMAPW
  ; proto_PFNDVPLOADBITMAPSTREAMA typedef proto fastcall :HWND, :LPSTREAM, :LPSTR, :LPVIEWERPLUGINFILEINFOA, :LPSIZE, :DWORD
  ; PFNDVPLOADBITMAPSTREAMA TYPEDEF PTR proto_PFNDVPLOADBITMAPSTREAMA
  ; proto_PFNDVPLOADBITMAPSTREAMW typedef proto fastcall :HWND, :LPSTREAM, :LPWSTR, :LPVIEWERPLUGINFILEINFOW, :LPSIZE, :DWORD
  ; PFNDVPLOADBITMAPSTREAMW TYPEDEF PTR proto_PFNDVPLOADBITMAPSTREAMW
  ; proto_PFNDVPLOADTEXTA typedef proto fastcall :LPDVPLOADTEXTDATAA
  ; PFNDVPLOADTEXTA TYPEDEF PTR proto_PFNDVPLOADTEXTA
  ; proto_PFNDVPLOADTEXTW typedef proto fastcall :LPDVPLOADTEXTDATAW
  ; PFNDVPLOADTEXTW TYPEDEF PTR proto_PFNDVPLOADTEXTW
  ; proto_PFNDVPSHOWPROPERTIESA typedef proto fastcall :HWND, :LPSTR, :LPVIEWERPLUGINFILEINFOA
  ; PFNDVPSHOWPROPERTIESA TYPEDEF PTR proto_PFNDVPSHOWPROPERTIESA
  ; proto_PFNDVPSHOWPROPERTIESW typedef proto fastcall :HWND, :LPWSTR, :LPVIEWERPLUGINFILEINFOW
  ; PFNDVPSHOWPROPERTIESW TYPEDEF PTR proto_PFNDVPSHOWPROPERTIESW
  ; proto_PFNDVPSHOWPROPERTIESSTREAMA typedef proto fastcall :HWND, :LPSTREAM, :LPSTR, :LPVIEWERPLUGINFILEINFOA, :DWORD
  ; PFNDVPSHOWPROPERTIESSTREAMA TYPEDEF PTR proto_PFNDVPSHOWPROPERTIESSTREAMA
  ; proto_PFNDVPSHOWPROPERTIESSTREAMW typedef proto fastcall :HWND, :LPSTREAM, :LPWSTR, :LPVIEWERPLUGINFILEINFOW, :DWORD
  ; PFNDVPSHOWPROPERTIESSTREAMW TYPEDEF PTR proto_PFNDVPSHOWPROPERTIESSTREAMW
  ; proto_PFNDVPCREATEVIEWER typedef proto fastcall :HWND, :LPRECT, :DWORD
  ; PFNDVPCREATEVIEWER TYPEDEF PTR proto_PFNDVPCREATEVIEWER
  ; proto_PFNDVPCONFIGURE typedef proto fastcall :HWND, :HWND, :DWORD
  ; PFNDVPCONFIGURE TYPEDEF PTR proto_PFNDVPCONFIGURE
  ; proto_PFNDVPABOUT typedef proto fastcall :HWND
  ; PFNDVPABOUT TYPEDEF PTR proto_PFNDVPABOUT
  ; proto_PFNDVPGETFILEINFOFILEA typedef proto fastcall :HWND, :LPSTR, :LPVIEWERPLUGINFILEINFOA, :LPDVPFILEINFOHEADER, :HANDLE
  ; PFNDVPGETFILEINFOFILEA TYPEDEF PTR proto_PFNDVPGETFILEINFOFILEA
  ; proto_PFNDVPGETFILEINFOFILEW typedef proto fastcall :HWND, :LPWSTR, :LPVIEWERPLUGINFILEINFOW, :LPDVPFILEINFOHEADER, :HANDLE
  ; PFNDVPGETFILEINFOFILEW TYPEDEF PTR proto_PFNDVPGETFILEINFOFILEW
  ; proto_PFNDVPGETFILEINFOFILESTREAMA typedef proto fastcall :HWND, :LPSTREAM, :LPSTR, :LPVIEWERPLUGINFILEINFOA, :LPDVPFILEINFOHEADER, :DWORD
  ; PFNDVPGETFILEINFOFILESTREAMA TYPEDEF PTR proto_PFNDVPGETFILEINFOFILESTREAMA
  ; proto_PFNDVPGETFILEINFOFILESTREAMW typedef proto fastcall :HWND, :LPSTREAM, :LPWSTR, :LPVIEWERPLUGINFILEINFOW, :LPDVPFILEINFOHEADER, :DWORD
  ; PFNDVPGETFILEINFOFILESTREAMW TYPEDEF PTR proto_PFNDVPGETFILEINFOFILESTREAMW
  
  
IFDEF __UNICODE__
PFNDVPIDENTIFY EQU <PFNDVPIDENTIFYW>
PFNDVPIDENTIFYFILE EQU <PFNDVPIDENTIFYFILEW>
PFNDVPIDENTIFYFILESTREAM EQU <PFNDVPIDENTIFYFILESTREAMW>
PFNDVPIDENTIFYFILEBYTES EQU <PFNDVPIDENTIFYFILEBYTESW>
PFNDVPLOADBITMAP EQU <PFNDVPLOADBITMAPW>
PFNDVPLOADBITMAPSTREAM EQU <PFNDVPLOADBITMAPSTREAMW>
PFNDVPLOADTEXT EQU <PFNDVPLOADTEXTW>
PFNDVPSHOWPROPERTIES EQU <PFNDVPSHOWPROPERTIESW>
PFNDVPSHOWPROPERTIESSTREAM EQU <PFNDVPSHOWPROPERTIESSTREAMW>
PFNDVPGETFILEINFOFILE EQU <PFNDVPGETFILEINFOFILEW>
PFNDVPGETFILEINFOFILESTREAM EQU <PFNDVPGETFILEINFOFILESTREAMW>
ELSE
PFNDVPIDENTIFY EQU <PFNDVPIDENTIFYA>
PFNDVPIDENTIFYFILE EQU <PFNDVPIDENTIFYFILEA>
PFNDVPIDENTIFYFILESTREAM EQU <PFNDVPIDENTIFYFILESTREAMA>
PFNDVPIDENTIFYFILEBYTES EQU <PFNDVPIDENTIFYFILEBYTESA>
PFNDVPLOADBITMAP EQU <PFNDVPLOADBITMAPA>
PFNDVPLOADBITMAPSTREAM EQU <PFNDVPLOADBITMAPSTREAMA>
PFNDVPLOADTEXT EQU <PFNDVPLOADTEXTA>
PFNDVPSHOWPROPERTIES EQU <PFNDVPSHOWPROPERTIESA>
PFNDVPSHOWPROPERTIESSTREAM EQU <PFNDVPSHOWPROPERTIESSTREAMA>
PFNDVPGETFILEINFOFILE EQU <PFNDVPGETFILEINFOFILEA>
PFNDVPGETFILEINFOFILESTREAM EQU <PFNDVPGETFILEINFOFILESTREAMA>
ENDIF
  
IFDEF __UNICODE__
DVP_Identify EQU <DVP_IdentifyW>
DVP_IdentifyFile EQU <DVP_IdentifyFileW>
DVP_IdentifyFileStream EQU <DVP_IdentifyFileStreamW>
DVP_IdentifyFileBytes EQU <DVP_IdentifyFileBytesW>
DVP_LoadBitmap EQU <DVP_LoadBitmapW>
DVP_LoadBitmapStream EQU <DVP_LoadBitmapStreamW>
DVP_LoadText EQU <DVP_LoadTextW>
DVP_ShowProperties EQU <DVP_ShowPropertiesW>
DVP_ShowPropertiesStream EQU <DVP_ShowPropertiesStreamW>
DVP_GetFileInfoFile EQU <DVP_GetFileInfoFileW>
DVP_GetFileInfoFileStream EQU <DVP_GetFileInfoFileStreamW>
ELSE
DVP_Identify EQU <DVP_IdentifyA>
DVP_IdentifyFile EQU <DVP_IdentifyFileA>
DVP_IdentifyFileStream EQU <DVP_IdentifyFileStreamA>
DVP_IdentifyFileBytes EQU <DVP_IdentifyFileBytesA>
DVP_LoadBitmap EQU <DVP_LoadBitmapA>
DVP_LoadBitmapStream EQU <DVP_LoadBitmapStreamA>
DVP_LoadText EQU <DVP_LoadTextA>
DVP_ShowProperties EQU <DVP_ShowPropertiesA>
DVP_ShowPropertiesStream EQU <DVP_ShowPropertiesStreamA>
DVP_GetFileInfoFile EQU <DVP_GetFileInfoFileA>
DVP_GetFileInfoFileStream EQU <DVP_GetFileInfoFileStreamA>
ENDIF

; Image frame size used by Opus
IF (VIEWERPLUGINVERSION ge 4)
OPUSVIEWER_IMAGE_FRAME_SIZE EQU 14
ELSE
OPUSVIEWER_IMAGE_FRAME_SIZE EQU 8
ENDIF
